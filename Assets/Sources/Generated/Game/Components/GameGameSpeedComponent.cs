//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameSpeedComponent gameSpeed { get { return (GameSpeedComponent)GetComponent(GameComponentsLookup.GameSpeed); } }
    public bool hasGameSpeed { get { return HasComponent(GameComponentsLookup.GameSpeed); } }

    public void AddGameSpeed(float newValue) {
        var index = GameComponentsLookup.GameSpeed;
        var component = CreateComponent<GameSpeedComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameSpeed(float newValue) {
        var index = GameComponentsLookup.GameSpeed;
        var component = CreateComponent<GameSpeedComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameSpeed() {
        RemoveComponent(GameComponentsLookup.GameSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameSpeed;

    public static Entitas.IMatcher<GameEntity> GameSpeed {
        get {
            if (_matcherGameSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameSpeed = matcher;
            }

            return _matcherGameSpeed;
        }
    }
}
